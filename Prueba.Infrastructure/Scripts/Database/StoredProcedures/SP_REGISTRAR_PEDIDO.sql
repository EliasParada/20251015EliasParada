USE DB_PRUEBA_TECNICA;
GO

IF OBJECT_ID('SP_REGISTRAR_PEDIDO', 'P') IS NOT NULL
    DROP PROCEDURE SP_REGISTRAR_PEDIDO;
GO

CREATE PROCEDURE SP_REGISTRAR_PEDIDO
    @ID_USUARIO INT,
    @DETALLES NVARCHAR(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRAN;

        DECLARE @ID_PEDIDO INT;
        DECLARE @TOTAL DECIMAL(12,2) = 0;

        INSERT INTO PEDIDO (ID_USUARIO, ESTADO, TOTAL)
        VALUES (@ID_USUARIO, 'PENDIENTE', 0);

        SET @ID_PEDIDO = SCOPE_IDENTITY();

        DECLARE @ID_PRODUCTO INT, @CANTIDAD INT, @PRECIO DECIMAL(10,2);

        DECLARE detalle_cursor CURSOR FOR
         SELECT ID_PRODUCTO, CANTIDAD
           FROM OPENJSON(@DETALLES)
           WITH (
                ID_PRODUCTO INT '$.id_producto',
                CANTIDAD INT '$.cantidad'
           );

        OPEN detalle_cursor;
        FETCH NEXT FROM detalle_cursor INTO @ID_PRODUCTO, @CANTIDAD;

        WHILE @@FETCH_STATUS = 0
        BEGIN
            SELECT @PRECIO = PRECIO 
              FROM PRODUCTO 
             WHERE ID_PRODUCTO = @ID_PRODUCTO;

            INSERT INTO DETALLE_PEDIDO (ID_PEDIDO, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO)
            VALUES (@ID_PEDIDO, @ID_PRODUCTO, @CANTIDAD, @PRECIO);

            UPDATE PRODUCTO
               SET STOCK = STOCK - @CANTIDAD,
                   FECHA_ACTUALIZACION = GETDATE()
             WHERE ID_PRODUCTO = @ID_PRODUCTO;

            INSERT INTO BITACORA_INVENTARIO (ID_PRODUCTO, ID_USUARIO, ACCION, CANTIDAD)
            VALUES (@ID_PRODUCTO, @ID_USUARIO, 'SALIDA', @CANTIDAD);

            SET @TOTAL += (@PRECIO * @CANTIDAD);

            FETCH NEXT FROM detalle_cursor INTO @ID_PRODUCTO, @CANTIDAD;
        END

        CLOSE detalle_cursor;
        DEALLOCATE detalle_cursor;

        UPDATE PEDIDO
           SET TOTAL = @TOTAL,
               ESTADO = 'CONFIRMADO',
               FECHA_ACTUALIZACION = GETDATE()
           WHERE ID_PEDIDO = @ID_PEDIDO;

        COMMIT TRAN;
    END TRY
    BEGIN CATCH
        ROLLBACK TRAN;
        THROW;
    END CATCH;
END
GO
